do local player=game.Players.LocalPlayer;local UserInputService=game:GetService("UserInputService");local RunService=game:GetService("RunService");local Stats=game:GetService("Stats");if  not game:IsLoaded() then game.Loaded:Wait();print("Game fully loaded at: "   .. os.date() );end local characterLoaded=false;local timeout=15;local startTime=tick();while  not player.Character and ((tick() -startTime)<timeout)  do player.CharacterAdded:Wait();end if player.Character then characterLoaded=true;print("Character loaded for player: "   .. player.Name );else warn("Failed to load character within "   .. timeout   .. " seconds" );return;end if  not player:FindFirstChild("PlayerGui") then warn("PlayerGui not found for player: "   .. player.Name );return;end local function showNotification(message) local notificationGui=Instance.new("ScreenGui");notificationGui.Name="XuvwareNotification";notificationGui.Parent=player.PlayerGui;notificationGui.ResetOnSpawn=false;notificationGui.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;notificationGui.IgnoreGuiInset=true;local notificationFrame=Instance.new("Frame");notificationFrame.Size=UDim2.new(0,200,0,50);notificationFrame.Position=UDim2.new(0.5, -100,0.1,0);notificationFrame.BackgroundColor3=Color3.new(0,0,0);notificationFrame.BorderColor3=Color3.new(0,0,1);notificationFrame.BorderSizePixel=2;notificationFrame.ZIndex=200;notificationFrame.Parent=notificationGui;local corner=Instance.new("UICorner");corner.CornerRadius=UDim.new(0,8);corner.Parent=notificationFrame;local notificationLabel=Instance.new("TextLabel");notificationLabel.Size=UDim2.new(1, -10,1, -10);notificationLabel.Position=UDim2.new(0,5,0,5);notificationLabel.BackgroundTransparency=1;notificationLabel.Text=message;notificationLabel.TextColor3=Color3.new(1,1,1);notificationLabel.TextSize=16;notificationLabel.Font=Enum.Font.SourceSansBold;notificationLabel.TextXAlignment=Enum.TextXAlignment.Center;notificationLabel.ZIndex=210;notificationLabel.Parent=notificationFrame;wait(3);for i=1,0, -0.05 do notificationFrame.BackgroundTransparency=1 -i ;notificationLabel.TextTransparency=1 -i ;wait(0.05);end notificationGui:Destroy();print("Notification shown: "   .. message );end showNotification("Xuvware Loaded");local toggleGui=Instance.new("ScreenGui");toggleGui.Name="XuvwareToggle";toggleGui.Parent=player.PlayerGui;toggleGui.Enabled=true;toggleGui.ResetOnSpawn=false;toggleGui.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;toggleGui.IgnoreGuiInset=true;print("Toggle GUI created with Enabled: "   .. tostring(toggleGui.Enabled) );local toggleButton=Instance.new("TextButton");toggleButton.Size=UDim2.new(0,120,0,40);toggleButton.Position=UDim2.new(0,10,0,60);toggleButton.BackgroundColor3=Color3.new(0.2,0.2,0.2);toggleButton.BorderColor3=Color3.new(0,0,1);toggleButton.BorderSizePixel=2;toggleButton.Text="Xuvware Open";toggleButton.TextColor3=Color3.new(0,0,1);toggleButton.TextSize=16;toggleButton.Font=Enum.Font.SourceSansBold;toggleButton.Visible=true;toggleButton.ZIndex=100;toggleButton.Parent=toggleGui;print("Toggle button created at position: "   .. tostring(toggleButton.Position)   .. ", Visible: "   .. tostring(toggleButton.Visible) );local toggleCorner=Instance.new("UICorner");toggleCorner.CornerRadius=UDim.new(0,8);toggleCorner.Parent=toggleButton;local statusGui=Instance.new("ScreenGui");statusGui.Name="XuvwareStatus";statusGui.Parent=player.PlayerGui;statusGui.Enabled=true;statusGui.ResetOnSpawn=false;statusGui.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;statusGui.IgnoreGuiInset=true;print("Status GUI created with Enabled: "   .. tostring(statusGui.Enabled) );local statusFrame=Instance.new("Frame");statusFrame.Size=UDim2.new(0,250,0,30);statusFrame.Position=UDim2.new(0,140,0,60);statusFrame.BackgroundColor3=Color3.new(0,0,0);statusFrame.BorderColor3=Color3.new(0,0,1);statusFrame.BorderSizePixel=2;statusFrame.Visible=true;statusFrame.ZIndex=100;statusFrame.Parent=statusGui;print("Status frame created at position: "   .. tostring(statusFrame.Position)   .. ", Visible: "   .. tostring(statusFrame.Visible) );local statusCorner=Instance.new("UICorner");statusCorner.CornerRadius=UDim.new(0,8);statusCorner.Parent=statusFrame;local statusLabel=Instance.new("TextLabel");statusLabel.Size=UDim2.new(1, -10,1, -10);statusLabel.Position=UDim2.new(0,5,0,5);statusLabel.BackgroundTransparency=1;statusLabel.Text="Xuvware | "   .. player.Name   .. " | FPS: 0 | Ping: 0" ;statusLabel.TextColor3=Color3.new(1,1,1);statusLabel.TextSize=14;statusLabel.TextXAlignment=Enum.TextXAlignment.Left;statusLabel.Visible=true;statusLabel.ZIndex=110;statusLabel.Parent=statusFrame;print("Status label created, Visible: "   .. tostring(statusLabel.Visible) );local screenGui=Instance.new("ScreenGui");screenGui.Name="Xuvware";screenGui.Parent=player.PlayerGui;screenGui.Enabled=true;screenGui.ResetOnSpawn=false;screenGui.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;screenGui.IgnoreGuiInset=true;print("Main GUI created with Enabled: "   .. tostring(screenGui.Enabled) );local frame=Instance.new("Frame");frame.Size=UDim2.new(0,450,0,300);frame.Position=UDim2.new(0.5, -225,0.5, -150);frame.BackgroundColor3=Color3.new(0,0,0);frame.BorderColor3=Color3.new(0,0,1);frame.BorderSizePixel=2;frame.Visible=false;frame.ZIndex=50;frame.Parent=screenGui;print("Main frame created at position: "   .. tostring(frame.Position)   .. ", Visible: "   .. tostring(frame.Visible) );local corner=Instance.new("UICorner");corner.CornerRadius=UDim.new(0,12);corner.Parent=frame;local dragging=false;local dragStart=nil;local startPos=nil;frame.InputBegan:Connect(function(input) if (input.UserInputType==Enum.UserInputType.Touch) then dragging=true;dragStart=input.Position;startPos=frame.Position;print("Main GUI dragging started");end end);frame.InputChanged:Connect(function(input) if (dragging and (input.UserInputType==Enum.UserInputType.Touch)) then local delta=input.Position-dragStart ;frame.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X ,startPos.Y.Scale,startPos.Y.Offset + delta.Y );print("Main GUI moved to: "   .. tostring(frame.Position) );end end);frame.InputEnded:Connect(function(input) if (input.UserInputType==Enum.UserInputType.Touch) then dragging=false;print("Main GUI dragging ended");end end);local creditLabel=Instance.new("TextLabel");creditLabel.Size=UDim2.new(0,100,0,20);creditLabel.Position=UDim2.new(1, -110,1, -30);creditLabel.BackgroundTransparency=1;creditLabel.Text="Made by Dvrx";creditLabel.TextColor3=Color3.new(1,1,1);creditLabel.TextSize=14;creditLabel.TextXAlignment=Enum.TextXAlignment.Right;creditLabel.Visible=true;creditLabel.ZIndex=60;creditLabel.Parent=frame;print("Credit label created, Visible: "   .. tostring(creditLabel.Visible) );local tabs={"Main","Rage","Customization","Settings"};local tabButtons={};local tabFrames={};for i,tabName in ipairs(tabs) do local tabFrame=Instance.new("Frame");tabFrame.Size=UDim2.new(1, -10,1, -40);tabFrame.Position=UDim2.new(0,5,0,35);tabFrame.BackgroundTransparency=1;tabFrame.Visible=tabName=="Main" ;tabFrame.ZIndex=60;tabFrame.Parent=frame;tabFrames[tabName]=tabFrame;print("Tab frame created: "   .. tabName   .. ", Visible: "   .. tostring(tabFrame.Visible) );if ((tabName=="Customization") or (tabName=="Settings")) then local comingSoonLabel=Instance.new("TextLabel");comingSoonLabel.Size=UDim2.new(0,200,0,50);comingSoonLabel.Position=UDim2.new(0.5, -100,0.5, -25);comingSoonLabel.BackgroundTransparency=1;comingSoonLabel.Text="Coming Soon";comingSoonLabel.TextColor3=Color3.new(1,1,1);comingSoonLabel.TextSize=24;comingSoonLabel.Font=Enum.Font.SourceSansBold;comingSoonLabel.TextXAlignment=Enum.TextXAlignment.Center;comingSoonLabel.TextYAlignment=Enum.TextYAlignment.Center;comingSoonLabel.Visible=true;comingSoonLabel.ZIndex=70;comingSoonLabel.Parent=tabFrame;print("Coming Soon label created for "   .. tabName   .. ", Visible: "   .. tostring(comingSoonLabel.Visible) );end end for i,tabName in ipairs(tabs) do local tabButton=Instance.new("TextButton");tabButton.Size=UDim2.new(0,110,0,30);tabButton.Position=UDim2.new(0,(i-1) * 112 ,0,0);tabButton.BackgroundColor3=Color3.new(0.2,0.2,0.2);tabButton.BorderColor3=Color3.new(0,0,1);tabButton.BorderSizePixel=1;tabButton.Text=tabName;tabButton.TextColor3=Color3.new(0,0,1);tabButton.TextSize=16;tabButton.Font=Enum.Font.SourceSansBold;tabButton.Visible=true;tabButton.ZIndex=70;tabButton.Parent=frame;print("Tab button created: "   .. tabName   .. ", Visible: "   .. tostring(tabButton.Visible) );tabButton.MouseButton1Click:Connect(function() for _,btn in pairs(tabButtons) do btn.BackgroundColor3=Color3.new(0.2,0.2,0.2);end tabButton.BackgroundColor3=Color3.new(0,0.5,1);for _,tFrame in pairs(tabFrames) do tFrame.Visible=false;end tabFrames[tabName].Visible=true;print("Switched to tab: "   .. tabName );end);table.insert(tabButtons,tabButton);end local aimButton=Instance.new("TextButton");aimButton.Size=UDim2.new(0,100,0,30);aimButton.Position=UDim2.new(0,10,0,10);aimButton.BackgroundColor3=Color3.new(0.2,0.2,0.2);aimButton.BorderColor3=Color3.new(0,0,1);aimButton.BorderSizePixel=1;aimButton.Text="Aim Off";aimButton.TextColor3=Color3.new(0,0,1);aimButton.TextSize=16;aimButton.Font=Enum.Font.SourceSansBold;aimButton.Visible=true;aimButton.ZIndex=70;aimButton.Parent=tabFrames['Main'];print("Aim button created, Visible: "   .. tostring(aimButton.Visible) );local smoothnessLabel=Instance.new("TextLabel");smoothnessLabel.Size=UDim2.new(0,100,0,20);smoothnessLabel.Position=UDim2.new(0,10,0,50);smoothnessLabel.BackgroundTransparency=1;smoothnessLabel.Text="Smoothness:";smoothnessLabel.TextColor3=Color3.new(1,1,1);smoothnessLabel.TextSize=14;smoothnessLabel.TextXAlignment=Enum.TextXAlignment.Left;smoothnessLabel.Visible=true;smoothnessLabel.ZIndex=70;smoothnessLabel.Parent=tabFrames['Main'];print("Smoothness label created, Visible: "   .. tostring(smoothnessLabel.Visible) );local smoothnessInput=Instance.new("TextBox");smoothnessInput.Size=UDim2.new(0,60,0,30);smoothnessInput.Position=UDim2.new(0,110,0,45);smoothnessInput.BackgroundColor3=Color3.new(0.2,0.2,0.2);smoothnessInput.BorderColor3=Color3.new(0,0,1);smoothnessInput.BorderSizePixel=1;smoothnessInput.Text="0.2";smoothnessInput.TextColor3=Color3.new(1,1,1);smoothnessInput.TextSize=14;smoothnessInput.Visible=true;smoothnessInput.ZIndex=70;smoothnessInput.Parent=tabFrames['Main'];print("Smoothness input created, Visible: "   .. tostring(smoothnessInput.Visible) );local predictionLabel=Instance.new("TextLabel");predictionLabel.Size=UDim2.new(0,100,0,20);predictionLabel.Position=UDim2.new(0,10,0,85);predictionLabel.BackgroundTransparency=1;predictionLabel.Text="Prediction:";predictionLabel.TextColor3=Color3.new(1,1,1);predictionLabel.TextSize=14;predictionLabel.TextXAlignment=Enum.TextXAlignment.Left;predictionLabel.Visible=true;predictionLabel.ZIndex=70;predictionLabel.Parent=tabFrames['Main'];print("Prediction label created, Visible: "   .. tostring(predictionLabel.Visible) );local predictionInput=Instance.new("TextBox");predictionInput.Size=UDim2.new(0,60,0,30);predictionInput.Position=UDim2.new(0,110,0,80);predictionInput.BackgroundColor3=Color3.new(0.2,0.2,0.2);predictionInput.BorderColor3=Color3.new(0,0,1);predictionInput.BorderSizePixel=1;predictionInput.Text="0.5";predictionInput.TextColor3=Color3.new(1,1,1);predictionInput.TextSize=14;predictionInput.Visible=true;predictionInput.ZIndex=70;predictionInput.Parent=tabFrames['Main'];print("Prediction input created, Visible: "   .. tostring(predictionInput.Visible) );local fovLabel=Instance.new("TextLabel");fovLabel.Size=UDim2.new(0,100,0,20);fovLabel.Position=UDim2.new(0,10,0,120);fovLabel.BackgroundTransparency=1;fovLabel.Text="FOV Radius:";fovLabel.TextColor3=Color3.new(1,1,1);fovLabel.TextSize=14;fovLabel.TextXAlignment=Enum.TextXAlignment.Left;fovLabel.Visible=true;fovLabel.ZIndex=70;fovLabel.Parent=tabFrames['Main'];print("FOV label created, Visible: "   .. tostring(fovLabel.Visible) );local fovInput=Instance.new("TextBox");fovInput.Size=UDim2.new(0,60,0,30);fovInput.Position=UDim2.new(0,110,0,115);fovInput.BackgroundColor3=Color3.new(0.2,0.2,0.2);fovInput.BorderColor3=Color3.new(0,0,1);fovInput.BorderSizePixel=1;fovInput.Text="200";fovInput.TextColor3=Color3.new(1,1,1);fovInput.TextSize=14;fovInput.Visible=true;fovInput.ZIndex=70;fovInput.Parent=tabFrames['Main'];print("FOV input created, Visible: "   .. tostring(fovInput.Visible) );local cframeButton=Instance.new("TextButton");cframeButton.Size=UDim2.new(0,100,0,30);cframeButton.Position=UDim2.new(0,10,0,10);cframeButton.BackgroundColor3=Color3.new(0.2,0.2,0.2);cframeButton.BorderColor3=Color3.new(0,0,1);cframeButton.BorderSizePixel=1;cframeButton.Text="CFrame";cframeButton.TextColor3=Color3.new(0,0,1);cframeButton.TextSize=16;cframeButton.Font=Enum.Font.SourceSansBold;cframeButton.Visible=true;cframeButton.ZIndex=70;cframeButton.Parent=tabFrames['Rage'];print("CFrame button created, Visible: "   .. tostring(cframeButton.Visible) );local speedLabel=Instance.new("TextLabel");speedLabel.Size=UDim2.new(0,100,0,20);speedLabel.Position=UDim2.new(0,10,0,50);speedLabel.BackgroundTransparency=1;speedLabel.Text="Speed Multiplier:";speedLabel.TextColor3=Color3.new(1,1,1);speedLabel.TextSize=14;speedLabel.TextXAlignment=Enum.TextXAlignment.Left;speedLabel.Visible=true;speedLabel.ZIndex=70;speedLabel.Parent=tabFrames['Rage'];print("Speed label created, Visible: "   .. tostring(speedLabel.Visible) );local speedInput=Instance.new("TextBox");speedInput.Size=UDim2.new(0,60,0,30);speedInput.Position=UDim2.new(0,110,0,45);speedInput.BackgroundColor3=Color3.new(0.2,0.2,0.2);speedInput.BorderColor3=Color3.new(0,0,1);speedInput.BorderSizePixel=1;speedInput.Text="2";speedInput.TextColor3=Color3.new(1,1,1);speedInput.TextSize=14;speedInput.Visible=true;speedInput.ZIndex=70;speedInput.Parent=tabFrames['Rage'];print("Speed input created, Visible: "   .. tostring(speedInput.Visible) );local lockGui=nil;local lockFrame=nil;local fovCircle=nil;local aimConnection=nil;local locked=false;local targetPlayer=nil;local camera=workspace.CurrentCamera;local fovRadius=200;local smoothness=0.2;local predictionFactor=0.5;local cframeGui=nil;local cframeToggle=nil;local cframeEnabled=false;local speedMultiplier=2;local speedConnection=nil;local frameCount=0;local lastFpsUpdate=tick();local fps=0;RunService.RenderStepped:Connect(function(deltaTime) frameCount=frameCount + 1 ;if ((tick() -lastFpsUpdate)>=1) then fps=math.floor(frameCount/(tick() -lastFpsUpdate) );frameCount=0;lastFpsUpdate=tick();local ping=math.floor(Stats.Network.ServerStatsItem["Data Ping"]:GetValue());statusLabel.Text="Xuvware | "   .. player.Name   .. " | FPS: "   .. fps   .. " | Ping: "   .. ping ;print("Status updated: FPS: "   .. fps   .. ", Ping: "   .. ping );end end);smoothnessInput.FocusLost:Connect(function() local value=tonumber(smoothnessInput.Text);if value then smoothness=math.clamp(value,0.1,1);smoothnessInput.Text=tostring(smoothness);print("Smoothness set to: "   .. smoothness );else smoothnessInput.Text=tostring(smoothness);print("Invalid smoothness input, reverted to: "   .. smoothness );end end);predictionInput.FocusLost:Connect(function() local value=tonumber(predictionInput.Text);if value then predictionFactor=math.clamp(value,0,2);predictionInput.Text=tostring(predictionFactor);print("Prediction set to: "   .. predictionFactor );else predictionInput.Text=tostring(predictionFactor);print("Invalid prediction input, reverted to: "   .. predictionFactor );end end);fovInput.FocusLost:Connect(function() local value=tonumber(fovInput.Text);if value then fovRadius=math.clamp(value,50,500);fovInput.Text=tostring(fovRadius);if fovCircle then fovCircle.Size=UDim2.new(0,fovRadius * 2 ,0,fovRadius * 2 );fovCircle.Position=UDim2.new(0.5, -fovRadius,0.5, -fovRadius);print("FOV radius updated to: "   .. fovRadius   .. ", Circle size: "   .. tostring(fovCircle.Size)   .. ", Position: "   .. tostring(fovCircle.Position) );end else fovInput.Text=tostring(fovRadius);print("Invalid FOV input, reverted to: "   .. fovRadius );end end);speedInput.FocusLost:Connect(function() local value=tonumber(speedInput.Text);if value then speedMultiplier=math.clamp(value,1,10);speedInput.Text=tostring(speedMultiplier);print("Speed multiplier set to: "   .. speedMultiplier );else speedInput.Text=tostring(speedMultiplier);print("Invalid speed input, reverted to: "   .. speedMultiplier );end end);local function isPlayerInFOV(head) if  not head then return false;end local headPos,onScreen=camera:WorldToScreenPoint(head.Position);if  not onScreen then return false;end local headScreenPos=Vector2.new(headPos.X,headPos.Y);local screenSize=camera.ViewportSize;local fovCenter=Vector2.new(screenSize.X/2 ,screenSize.Y/2 );local distance=(headScreenPos-fovCenter).Magnitude;print("Checking FOV for head at "   .. tostring(head.Position)   .. ", Distance: "   .. distance   .. ", In FOV: "   .. tostring(distance<=fovRadius ) );return distance<=fovRadius ;end local function findClosestPlayerInFOV() local closestDist=math.huge;local closestPlayer=nil;local screenSize=camera.ViewportSize;local fovCenter=Vector2.new(screenSize.X/2 ,screenSize.Y/2 );for _,p in pairs(game.Players:GetPlayers()) do if ((p~=player) and p.Character and p.Character:FindFirstChild("Head")) then local head=p.Character.Head;if isPlayerInFOV(head) then local headPos=camera:WorldToScreenPoint(head.Position);local headScreenPos=Vector2.new(headPos.X,headPos.Y);local dist=(headScreenPos-fovCenter).Magnitude;if (dist<closestDist) then closestDist=dist;closestPlayer=p;end end end end if closestPlayer then print("Closest player found: "   .. closestPlayer.Name   .. " at distance: "   .. closestDist );else print("No valid player found in FOV");end return closestPlayer;end toggleButton.MouseButton1Click:Connect(function() frame.Visible= not frame.Visible;toggleButton.Text=(frame.Visible and "Xuvware Closed") or "Xuvware Open" ;print("Main GUI visibility toggled: "   .. ((frame.Visible and "Visible") or "Hidden") );end);aimButton.MouseButton1Click:Connect(function() if  not lockGui then lockGui=Instance.new("ScreenGui");lockGui.Name="LockGui";lockGui.Parent=player.PlayerGui;lockGui.Enabled=true;lockGui.ResetOnSpawn=false;lockGui.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;lockGui.IgnoreGuiInset=true;print("Aimbot GUI created with Enabled: "   .. tostring(lockGui.Enabled) );lockFrame=Instance.new("Frame");lockFrame.Size=UDim2.new(0,100,0,100);lockFrame.Position=UDim2.new(0.5, -50,0.5,150);lockFrame.BackgroundColor3=Color3.new(0,0,0);lockFrame.BorderColor3=Color3.new(0,0,1);lockFrame.BorderSizePixel=2;lockFrame.Visible=true;lockFrame.ZIndex=100;lockFrame.Parent=lockGui;print("Aimbot frame created at position: "   .. tostring(lockFrame.Position)   .. ", Visible: "   .. tostring(lockFrame.Visible) );local lockCorner=Instance.new("UICorner");lockCorner.CornerRadius=UDim.new(0,8);lockCorner.Parent=lockFrame;fovCircle=Instance.new("Frame");fovCircle.Size=UDim2.new(0,fovRadius * 2 ,0,fovRadius * 2 );fovCircle.Position=UDim2.new(0.5, -fovRadius,0.5, -fovRadius);fovCircle.BackgroundColor3=Color3.new(0,0,1);fovCircle.BackgroundTransparency=0.8;fovCircle.Visible=true;fovCircle.ZIndex=50;local fovCorner=Instance.new("UICorner");fovCorner.CornerRadius=UDim.new(0.5,0);fovCorner.Parent=fovCircle;fovCircle.Parent=lockGui;print("FOV circle created at position: "   .. tostring(fovCircle.Position)   .. ", Visible: "   .. tostring(fovCircle.Visible) );local lockDragging=false;local lockDragStart=nil;local lockStartPos=nil;lockFrame.InputBegan:Connect(function(input) if (input.UserInputType==Enum.UserInputType.Touch) then lockDragging=true;lockDragStart=input.Position;lockStartPos=lockFrame.Position;print("Aimbot GUI dragging started");end end);lockFrame.InputChanged:Connect(function(input) if (lockDragging and (input.UserInputType==Enum.UserInputType.Touch)) then local delta=input.Position-lockDragStart ;lockFrame.Position=UDim2.new(lockStartPos.X.Scale,lockStartPos.X.Offset + delta.X ,lockStartPos.Y.Scale,lockStartPos.Y.Offset + delta.Y );print("Aimbot GUI moved to: "   .. tostring(lockFrame.Position) );end end);lockFrame.InputEnded:Connect(function(input) if (input.UserInputType==Enum.UserInputType.Touch) then lockDragging=false;print("Aimbot GUI dragging ended");end end);lockFrame.InputBegan:Connect(function(input) if (input.UserInputType==Enum.UserInputType.Touch) then locked= not locked;aimButton.Text=(locked and "Aim On") or "Aim Off" ;lockFrame.BackgroundColor3=(locked and Color3.new(1,0,0)) or Color3.new(0,0,0) ;print("Aimbot toggled: "   .. ((locked and "On") or "Off") );if locked then targetPlayer=findClosestPlayerInFOV();if (targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head")) then print("Locked onto player: "   .. targetPlayer.Name );local lastTargetPos=targetPlayer.Character.Head.Position;local lastTime=tick();aimConnection=RunService.RenderStepped:Connect(function() local currentTime=tick();local deltaTime=currentTime-lastTime ;lastTime=currentTime;if (locked and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head")) then local head=targetPlayer.Character.Head;local hrp=targetPlayer.Character:FindFirstChild("HumanoidRootPart");local velocity=(hrp and hrp.Velocity) or ((head.Position-lastTargetPos)/math.max(deltaTime,0.001)) ;local predictedPos=head.Position + (velocity * predictionFactor) ;lastTargetPos=head.Position;print("Tracking player: "   .. targetPlayer.Name   .. ", Head at "   .. tostring(head.Position)   .. ", Velocity: "   .. tostring(velocity)   .. ", Predicted: "   .. tostring(predictedPos) );local currentCFrame=camera.CFrame;local targetCFrame=CFrame.new(camera.CFrame.Position,predictedPos);camera.CFrame=currentCFrame:Lerp(targetCFrame,1 -smoothness );else locked=false;aimButton.Text="Aim Off";lockFrame.BackgroundColor3=Color3.new(0,0,0);if aimConnection then aimConnection:Disconnect();aimConnection=nil;end print("Target invalid");end end);else locked=false;aimButton.Text="Aim Off";lockFrame.BackgroundColor3=Color3.new(0,0,0);print("No valid target found");end else if aimConnection then aimConnection:Disconnect();aimConnection=nil;end targetPlayer=nil;print("Aimbot disabled");end end end);else locked=false;aimButton.Text="Aim Off";if aimConnection then aimConnection:Disconnect();aimConnection=nil;end targetPlayer=nil;lockGui:Destroy();lockGui=nil;lockFrame=nil;fovCircle=nil;print("Aimbot GUI destroyed");end end);cframeButton.MouseButton1Click:Connect(function() if  not cframeGui then cframeGui=Instance.new("ScreenGui");cframeGui.Name="CFrameGui";cframeGui.Parent=player.PlayerGui;cframeGui.Enabled=true;cframeGui.ResetOnSpawn=false;cframeGui.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;cframeGui.IgnoreGuiInset=true;print("CFrame GUI created with Enabled: "   .. tostring(cframeGui.Enabled) );cframeToggle=Instance.new("TextButton");cframeToggle.Size=UDim2.new(0,120,0,40);cframeToggle.Position=UDim2.new(0.5, -60,0.5,50);cframeToggle.BackgroundColor3=Color3.new(0,0,0);cframeToggle.BorderColor3=Color3.new(0,0,1);cframeToggle.BorderSizePixel=2;cframeToggle.Text="CFrame Off";cframeToggle.TextColor3=Color3.new(0,0,1);cframeToggle.TextSize=16;cframeToggle.Font=Enum.Font.SourceSansBold;cframeToggle.Visible=true;cframeToggle.ZIndex=100;cframeToggle.Parent=cframeGui;print("CFrame toggle button created at position: "   .. tostring(cframeToggle.Position)   .. ", Visible: "   .. tostring(cframeToggle.Visible) );local cframeCorner=Instance.new("UICorner");cframeCorner.CornerRadius=UDim.new(0,8);cframeCorner.Parent=cframeToggle;local cframeDragging=false;local cframeDragStart=nil;local cframeStartPos=nil;cframeToggle.InputBegan:Connect(function(input) if (input.UserInputType==Enum.UserInputType.Touch) then cframeDragging=true;cframeDragStart=input.Position;cframeStartPos=cframeToggle.Position;print("CFrame toggle dragging started");end end);cframeToggle.InputChanged:Connect(function(input) if (cframeDragging and (input.UserInputType==Enum.UserInputType.Touch)) then local delta=input.Position-cframeDragStart ;cframeToggle.Position=UDim2.new(cframeStartPos.X.Scale,cframeStartPos.X.Offset + delta.X ,cframeStartPos.Y.Scale,cframeStartPos.Y.Offset + delta.Y );print("CFrame toggle moved to: "   .. tostring(cframeToggle.Position) );end end);cframeToggle.InputEnded:Connect(function(input) if (input.UserInputType==Enum.UserInputType.Touch) then cframeDragging=false;print("CFrame toggle dragging ended");end end);cframeToggle.MouseButton1Click:Connect(function() cframeEnabled= not cframeEnabled;cframeToggle.Text=(cframeEnabled and "CFrame Enabled") or "CFrame Off" ;cframeToggle.BackgroundColor3=(cframeEnabled and Color3.new(1,0,0)) or Color3.new(0,0,0) ;print("CFrame speed toggled: "   .. ((cframeEnabled and "On") or "Off") );if cframeEnabled then speedConnection=RunService.RenderStepped:Connect(function(deltaTime) if (player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid")) then local hrp=player.Character.HumanoidRootPart;local humanoid=player.Character.Humanoid;local moveDirection=humanoid.MoveDirection;if (moveDirection.Magnitude>0) then local speed=speedMultiplier * 50 ;local direction=moveDirection.Unit;local velocity=direction * speed ;hrp.CFrame=hrp.CFrame + (velocity * deltaTime) ;print("CFrame speed applied: Direction "   .. tostring(direction)   .. ", Speed: "   .. speed );end end end);elseif speedConnection then speedConnection:Disconnect();speedConnection=nil;print("CFrame speed disabled");end end);else cframeEnabled=false;cframeToggle.Text="CFrame Off";cframeToggle.BackgroundColor3=Color3.new(0,0,0);if speedConnection then speedConnection:Disconnect();speedConnection=nil;end cframeGui:Destroy();cframeGui=nil;cframeToggle=nil;print("CFrame GUI destroyed");end end);RunService.Heartbeat:Connect(function() if (toggleGui and toggleGui.Parent and  not toggleButton.Visible) then toggleButton.Visible=true;print("Forced toggle button visibility");end if (statusGui and statusGui.Parent and  not statusFrame.Visible) then statusFrame.Visible=true;print("Forced status frame visibility");end if (screenGui and screenGui.Parent and frame.Visible) then if  not aimButton.Visible then aimButton.Visible=true;print("Forced aim button visibility");end if  not smoothnessInput.Visible then smoothnessInput.Visible=true;print("Forced smoothness input visibility");end if  not predictionInput.Visible then predictionInput.Visible=true;print("Forced prediction input visibility");end if  not fovInput.Visible then fovInput.Visible=true;print("Forced FOV input visibility");end if  not cframeButton.Visible then cframeButton.Visible=true;print("Forced CFrame button visibility");end if  not speedInput.Visible then speedInput.Visible=true;print("Forced speed input visibility");end end if (lockGui and lockGui.Parent and lockFrame and  not lockFrame.Visible) then lockFrame.Visible=true;print("Forced aimbot frame visibility");end if (fovCircle and fovCircle.Parent and  not fovCircle.Visible) then fovCircle.Visible=true;print("Forced FOV circle visibility");end if (cframeGui and cframeGui.Parent and cframeToggle and  not cframeToggle.Visible) then cframeToggle.Visible=true;print("Forced CFrame toggle visibility");end end); end
